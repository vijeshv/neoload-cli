pipeline {
  agent any

  parameters {
    string(defaultValue: "e2ea4ff6dea7f4a3b9129e49705a64b1a02fa823318da3e4", description: 'Neoload Web Token', name: 'token')
    string(defaultValue: "QUD3R", description: 'Zone identifier', name: 'zone_id')
    string(defaultValue: "https://preprod-neoload-api.saas.neotys.com/", description: 'NeoLoad Web Api Url', name: 'api_url')
  }

  stages {
    stage('Attach Worker') {   
        environment {
         NEOLOAD="${WORKSPACE}\neoload"
        HOME="${WORKSPACE}"
      }
      stages {
        stage('Get NeoLoad CLI') {
          steps {
              bat "pip3 install -U  neoload"
              bat "NEOLOAD --version"
          }
        }
        stage('Get NeoLoad project'){
            steps {
                bat 'curl -o simpledemo.yml  https://github.com/vijeshv/neoload-cli/blob/master/examples/pipelines/jenkins/test.yml'
                 }
        }
        stage('Prepare NeoLoad test') {
          steps {
              bat """NEOLOAD  login --url ${params.api_url} ${params.token}  test-settings --zone ${params.zone_id} --lgs 1 --scenario 'simpledemo' createorpatch "My Jenkins Test With CLI"   project --path simpledemo.yml upload
                """
          }
        }
        stage('Run Test') {
          steps {
              bat """NEOLOAD run  --name "Jenkins pipeline performance regression test ${BUILD_NUMBER}"   --external-url "${BUILD_URL}"  --external-url-label "Jenkins build ${BUILD_NUMBER}"  --description "Jenkins result description"   --return-0   --sap-vu "5"   --reservation-duration "1800" 
                 """
          }
        }
        stage('Generate Test Report') {
          steps {
             bat "$NEOLOAD test-results junitsla"
          }
          post {
              always {
                  junit 'junit-sla.xml'
              }
          }
        }
      }
    }
  }
}
